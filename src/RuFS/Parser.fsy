%start start

%token <int> NUM
%token SUM
%token SUB
%token MUL
%token DIV
%token <string> VNAME
%token KW_LET
%token KW_PRINT
%token EQ


%token EOF

%type < AST.Program > start

%%

start: stmt {[$1]}
     | stmt start {$1 :: $2}

stmt: KW_PRINT vname {AST.Print($2)}
    | KW_LET vname EQ expr {AST.VDecl($2,$4)}

expr: NUM {AST.Num($1)}
    | expr SUM expr {AST.Sum($1,$3)}
    | expr SUB expr {AST.Sub($1,$3)}
    | expr MUL expr {AST.Mul($1,$3)}
    | expr DIV expr {AST.Div($1,$3)}
    
vname: VNAME {AST.Var($1)}

eof: EOF {1}
